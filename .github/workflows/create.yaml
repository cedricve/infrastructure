name: Create Deployment Environment
on:
  workflow_dispatch:
    inputs:
      project_name:
        description: "Project name"
        required: true
        default: "project-a"
      environment_name:
        description: "Environment name"
        required: true
        default: "dev"
jobs:
  # This will lookup a GitHub environment through the GitHub API
  lookup-environment:
    name: Get GitHub Environments
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      PROJECT_NAME: ${{ github.event.inputs.project_name }}
      ENVIRONMENT_NAME: ${{ github.event.inputs.environment_name }}
      FULL_NAME: ${{ github.event.inputs.project_name }}-${{ github.event.inputs.environment_name }}
    steps:
      - uses: octokit/request-action@v2.x
        id: get_release
        with:
          route: GET /repos/{owner}/{repo}/environments/${{ env.FULL_NAME }}
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
      - run: "echo Environment found: '${{ steps.get_release.outputs.data }}'"
        if: ${{ success() }}
      - run: "echo Environment could not be found. Request failed with status '${{ steps.get_release.outputs.status }}', proceeding to create."
        if: ${{ failure() }}
  # This will create a GitHub environment through the GitHub API if does not exist
  # Find more information here: https://docs.github.com/en/rest/deployments/environments?apiVersion=2022-11-28#create-or-update-an-environment
  create-environment:
    name: Create GitHub Environment
    needs: lookup-environment
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      PROJECT_NAME: ${{ github.event.inputs.project_name }}
      ENVIRONMENT_NAME: ${{ github.event.inputs.environment_name }}
      FULL_NAME: ${{ github.event.inputs.project_name }}-${{ github.event.inputs.environment_name }}
    steps:
      - uses: octokit/request-action@v2.x
        id: create_environment
        with:
          route: PUT /repos/{owner}/{repo}/environments/${{ env.FULL_NAME }}
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
          #data: |
          #  {
          #    "prevent_self_review": false,
          #    "deployment_branch_policy": {
          #      "protected_branches": false,
          #    }
          #  }

      - run: "echo Environment created successfully: '${{ steps.get_release.outputs.data }}'"
        if: ${{ success() }}
      - run: "echo Environment could not be created. Request failed with status '${{ steps.get_release.outputs.status }}'"
        if: ${{ failure() }}
  add-secrets:
    name: Add environment variables to environment
    needs: create-environment
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      PROJECT_NAME: ${{ github.event.inputs.project_name }}
      ENVIRONMENT_NAME: ${{ github.event.inputs.environment_name }}
      FULL_NAME: ${{ github.event.inputs.project_name }}-${{ github.event.inputs.environment_name }}
    steps:
      - uses: octokit/request-action@v2.x
        id: add_project_name
        with:
          route: POST /repos/{owner}/{repo}/environments/${{ env.FULL_NAME }}/variables
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
          data: |
            {
              "name": "PROJECT_NAME",
              "value": ${{ env.PROJECT_NAME }},
            }
      - run: "echo environment added successfully"
        if: ${{ success() }}
      - run: "echo environment could not be added. Request failed with status '${{ steps.get_release.outputs.status }}'"
        if: ${{ failure() }}
      - uses: octokit/request-action@v2.x
        id: add_environment_name
        with:
          route: POST /repos/{owner}/{repo}/environments/${{ env.FULL_NAME }}/variables
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
          data: |
            {
              "name": "ENVIRONMENT_NAME",
              "value": ${{ env.ENVIRONMENT_NAME }},
            }
      - run: "echo environment added successfully"
        if: ${{ success() }}
      - run: "echo environment could not be added. Request failed with status '${{ steps.get_release.outputs.status }}'"
        if: ${{ failure() }}
    #prepare-configuration-files:
    #  name: Prepare configuration files, this will create a folder in the "aro-spoke" repository representing PROJECT_NAME/ENVIRONMENT_NAME
    #  needs: add-configuration-files
    #  runs-on: ubuntu-latest
    #  steps:
    #    - name: Checkout repository
    #      uses: actions/checkout@v2
    #      with:
    #        repository: ${{ github.repository }}
      

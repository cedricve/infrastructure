name: Create Deployment Environment
on:
  workflow_dispatch:
    inputs:
      project_name:
        description: "Project name"
        required: true
        default: "project-a"

jobs:
  # This will create a GitHub environment through the GitHub API
  create-environment:
    name: Get GitHub Environments
    #environment:
    #  name: project-b
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.4.0
        id: get_release
        with:
          route: GET /repos/{owner}/{repo}/environments/{project_name}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo Release found: '${{ steps.get_release.outputs.data }}'"
      - run: "echo Release could not be found. Request failed with status '${{ steps.get_release.outputs.status }}'"
        if: ${{ failure() }}